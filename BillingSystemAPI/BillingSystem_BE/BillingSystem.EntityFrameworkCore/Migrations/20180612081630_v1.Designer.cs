// <auto-generated />
using BillingSystem.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BillingSystem.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(BillingSystemDbContext))]
    [Migration("20180612081630_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BillingSystem.Core.BillInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AddedDate");

                    b.Property<string>("BillDate");

                    b.Property<int>("BillNo");

                    b.Property<int>("BillTotal");

                    b.Property<int>("BowserId");

                    b.Property<int>("CompanyId");

                    b.Property<int>("EmployeeId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("BowserId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("BillInfo");
                });

            modelBuilder.Entity("BillingSystem.Core.Bowsers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AddedDate");

                    b.Property<string>("BowserNoPlate");

                    b.Property<int>("Capacity");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Model");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("Bowsers");
                });

            modelBuilder.Entity("BillingSystem.Core.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AddedDate");

                    b.Property<string>("Address");

                    b.Property<int>("CompanyId");

                    b.Property<string>("CompanyName");

                    b.Property<bool>("IsActive");

                    b.Property<string>("MailAddress");

                    b.Property<int>("MobileNo");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("PhoneNo");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("BillingSystem.Core.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AddedDate");

                    b.Property<string>("Address");

                    b.Property<string>("DOB");

                    b.Property<string>("DrivingLisonNo");

                    b.Property<int>("EmployeeNIC");

                    b.Property<string>("EmployeeType");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsActive");

                    b.Property<string>("LastName");

                    b.Property<int>("Mobile");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("BillingSystem.Core.Invoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AddedDate");

                    b.Property<int?>("CompanyIDId");

                    b.Property<DateTime>("FromDate");

                    b.Property<int>("InvoiceID");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<DateTime>("ToDate");

                    b.Property<int>("Total");

                    b.HasKey("Id");

                    b.HasIndex("CompanyIDId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("BillingSystem.Core.BillInfo", b =>
                {
                    b.HasOne("BillingSystem.Core.Bowsers", "Bowser")
                        .WithMany()
                        .HasForeignKey("BowserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BillingSystem.Core.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BillingSystem.Core.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BillingSystem.Core.Invoice", b =>
                {
                    b.HasOne("BillingSystem.Core.Company", "CompanyID")
                        .WithMany()
                        .HasForeignKey("CompanyIDId");
                });
#pragma warning restore 612, 618
        }
    }
}
